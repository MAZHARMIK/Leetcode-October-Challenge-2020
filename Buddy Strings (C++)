class Solution {
public:
    bool checkFreq(string& a) {
      //if strings are same and there is any character with frequency >= 2 theb=n swap can be done. So, return true
      int freq[26] = {0};
      for(int i=0;i<a.length();i++){
            freq[a[i]-'a']+=1;
            if(freq[a[i]-'a'] >= 2){
              return true;
            }
      }
      return false;
    }
    bool buddyStrings(string A, string B) {
        int m = A.length();
        int n = B.length();
        
        if(m != n)
            return false;
        if(A == B)
            return checkFreq(A);
            
        vector<int> index; //this should turn out to be of size 2 only
        for(int i = 0; i<m; i++) {
            if(A[i] != B[i])
                index.push_back(i);
        }
        
        if(index.size() == 2 && A[index[0]] == B[index[1]] && B[index[0]] == A[index[1]])
            return true;
        return false;
    }
};
